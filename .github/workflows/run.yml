name: Run the S3 Lister

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'Specific bucket name to list (optional)'
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # For OIDC authentication
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
    
    - name: Login to AWS using OIDC (if AWS_ROLE_ARN is set)
      if: secrets.AWS_ROLE_ARN != ''
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Run S3 lister
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_MAX_ATTEMPTS: 3
        MAX_CONCURRENT_BUCKETS: 3
        MAX_RECURSION_DEPTH: 4
        # Access keys are only used if not using OIDC
        # Supported for interview needs, do not use in production
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      run: |
        poetry run python main.py "${{ github.event.inputs.bucket_name }}"
